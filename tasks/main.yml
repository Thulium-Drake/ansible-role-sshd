---
# What: Configure the SSH server
#
- name: 'Include OS specific variables'
  include_vars: "{{ ansible_facts['os_family'] }}.yml"
  no_log: true

- name: 'Install SSH server'
  package:
    name: 'openssh-server'
    state: 'present'
  notify:
    - 'restart sshd'

- meta: 'flush_handlers'

- name: 'Create conf directory'
  file:
    dest: '/etc/ssh/conf.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: 0700

- name: 'Place/remove base config file'
  template:
    dest: '/etc/ssh/conf.d/00_sshd_base'
    src: '00_sshd_base.j2'
    owner: 'root'
    group: 'root'
    mode: 0644

- name: 'Merge sshd_configs (requires Ansible Merge Vars)'
  merge_vars:
    suffix_to_merge: '_sshd_configs__to_merge'
    merged_var_name: 'sshd_configs'
    expected_type: 'list'

- name: 'Merge admin_ssh_keys (requires Ansible Merge Vars)'
  merge_vars:
    suffix_to_merge: '_admin_ssh_keys__to_merge'
    merged_var_name: 'admin_ssh_keys'
    expected_type: 'list'

- name: 'Place additional config file(s)'
  copy:
    dest: "/etc/ssh/conf.d/{{ file }}"
    src: "{{ sshd_configdir + file }}"
  loop: "{{ sshd_configs|default([]) }}"
  loop_control:
    loop_var: 'file'
  when: sshd_configs | length > 0

- name: 'Merge configs and restart SSHD'
  assemble:
    dest: '/etc/ssh/sshd_config'
    src: '/etc/ssh/conf.d'
    owner: 'root'
    group: 'root'
    mode: 0600
    validate: '/usr/sbin/sshd -t -f %s'
  notify:
    - 'restart sshd'

- name: "Set up SSH authorized keys for {{ sshd_admin_user }}"
  block:
    - name: 'Put keys in temp file'
      lineinfile:
        path: "/tmp/authorized_keys_{{ ansible_facts['fqdn'] }}"
        line: "{{ lookup('file', sshd_pubkeydir + key ) }}"
        create: true
        state: 'present'
        mode: 0644
      loop: "{{ admin_ssh_keys|default([]) }}"
      loop_control:
        loop_var: 'key'
      changed_when: false
      delegate_to: 'localhost'

    - name: "Install authorized_keys for {{ sshd_admin_user }}"
      ansible.posix.authorized_key:
        user: "{{ sshd_admin_user }}"
        key: "{{ lookup('file', '/tmp/authorized_keys_' + ansible_facts['fqdn'] ) }}"
        exclusive: true
  always:
    - name: 'Clean up temp file'
      file:
        path: "/tmp/authorized_keys_{{ ansible_facts['fqdn'] }}"
        state: 'absent'
      changed_when: false
      delegate_to: 'localhost'
  when: admin_ssh_keys | length > 0
